services:

  zookeeper:
    image: zookeeper:3.8
    ports:
      - "2181:2181"
    networks:
      - hotel-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - hotel-network

  postgres:
    image: postgres:15.5
    environment:
      POSTGRES_DB: hotel_aydin
      POSTGRES_USER: aydin
      POSTGRES_PASSWORD: sifre123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aydin -d hotel_aydin"]
      interval: 10s
      timeout: 5s
      retries: 5

  hotel-service:
    build:
      context: ./hotel-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel_aydin
      SPRING_DATASOURCE_USERNAME: aydin
      SPRING_DATASOURCE_PASSWORD: sifre123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_SERVLET_CONTEXT_PATH: /
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - hotel-network

  reservation-service:
    build:
      context: ./reservation-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel_aydin
      SPRING_DATASOURCE_USERNAME: aydin
      SPRING_DATASOURCE_PASSWORD: sifre123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - hotel-network

  notification-service:
    build:
      context: ./notification-service
    ports:
      - "8083:8083"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - hotel-network

  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8084:8084"
    depends_on:
      - kafka
    networks:
      - hotel-network
      
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - hotel-service
      - reservation-service
      - notification-service
    networks:
      - hotel-network

volumes:
  pgdata:

networks:
  hotel-network:
    driver: bridge
